# Copyright IBM Corp. All Rights Reserved.
#
# SPDX-License-Identifier: Apache-2.0
#

version: "3"

volumes:
  orderermbemarketcom:
  orderer2mbemarketcom:
  orderer3mbemarketcom:
  orderer4mbemarketcom:
  orderer5mbemarketcom:
  peer0org1mbemarketcom:
  peer0org2mbemarketcom:
  peer0org3mbemarketcom:

networks:
  test:
    external:
      name: test

services:
  orderermbemarketcom:
    deploy:
      placement:
        constraints:
          - node.labels.name == manager
    container_name: orderer.mbemarket.com
    image: hyperledger/fabric-orderer:2.3
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - /home/ravi/mbeMarket/test-network/system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer.mbemarket.com/msp:/var/hyperledger/orderer/msp
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer.mbemarket.com/tls/:/var/hyperledger/orderer/tls
      - orderermbemarketcom:/var/hyperledger/production/orderer
    ports:
      - 7050:7050
    networks:
      test:
        aliases:
          - orderer.mbemarket.com
  orderer2mbemarketcom:
    deploy:
      placement:
        constraints:
          - node.labels.name == manager
    container_name: orderer2.mbemarket.com
    image: hyperledger/fabric-orderer:2.3
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - /home/ravi/mbeMarket/test-network/system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer2.mbemarket.com/msp:/var/hyperledger/orderer/msp
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer2.mbemarket.com/tls/:/var/hyperledger/orderer/tls
      - orderer2mbemarketcom:/var/hyperledger/production/orderer
    ports:
      - 8050:7050
    networks:
      test:
        aliases:
          - orderer2.mbemarket.com

  orderer3mbemarketcom:
    deploy:
      placement:
        constraints:
          - node.labels.name == manager
    container_name: orderer3.mbemarket.com
    image: hyperledger/fabric-orderer:2.3
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - /home/ravi/mbeMarket/test-network/system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer3.mbemarket.com/msp:/var/hyperledger/orderer/msp
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer3.mbemarket.com/tls/:/var/hyperledger/orderer/tls
      - orderer3mbemarketcom:/var/hyperledger/production/orderer
    ports:
      - 9050:7050
    networks:
      test:
        aliases:
          - orderer3.mbemarket.com

  orderer4mbemarketcom:
    deploy:
      placement:
        constraints:
          - node.labels.name == manager
    container_name: orderer4.mbemarket.com
    image: hyperledger/fabric-orderer:2.3
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - /home/ravi/mbeMarket/test-network/system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer4.mbemarket.com/msp:/var/hyperledger/orderer/msp
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer4.mbemarket.com/tls/:/var/hyperledger/orderer/tls
      - orderer4mbemarketcom:/var/hyperledger/production/orderer
    ports:
      - 10050:7050
    networks:
      test:
        aliases:
          - orderer4.mbemarket.com

  orderer5mbemarketcom:
    deploy:
      placement:
        constraints:
          - node.labels.name == manager
    container_name: orderer5.mbemarket.com
    image: hyperledger/fabric-orderer:2.3
    environment:
      - FABRIC_LOGGING_SPEC=INFO
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_LISTENPORT=7050
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/orderer/orderer.genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_KAFKA_TOPIC_REPLICATIONFACTOR=1
      - ORDERER_KAFKA_VERBOSE=true
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric
    command: orderer
    volumes:
      - /home/ravi/mbeMarket/test-network/system-genesis-block/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer5.mbemarket.com/msp:/var/hyperledger/orderer/msp
      - /home/ravi/mbeMarket/test-network/organizations/ordererOrganizations/mbemarket.com/orderers/orderer5.mbemarket.com/tls/:/var/hyperledger/orderer/tls
      - orderer5mbemarketcom:/var/hyperledger/production/orderer
    ports:
      - 11050:7050
    networks:
      test:
        aliases:
          - orderer5.mbemarket.com

  peer0org1mbemarketcom:
    deploy:
      placement:
        constraints:
          - node.labels.name == manager
    container_name: peer0.org1.mbemarket.com
    image: hyperledger/fabric-peer:2.3
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org1.mbemarket.com
      - CORE_PEER_ADDRESS=peer0.org1.mbemarket.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.mbemarket.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org1.mbemarket.com:7051
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.mbemarket.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false
    volumes:
      - /var/run/:/host/var/run/
      - /home/ravi/mbeMarket/test-network/organizations/peerOrganizations/org1.mbemarket.com/peers/peer0.org1.mbemarket.com/msp:/etc/hyperledger/fabric/msp
      - /home/ravi/mbeMarket/test-network/organizations/peerOrganizations/org1.mbemarket.com/peers/peer0.org1.mbemarket.com/tls:/etc/hyperledger/fabric/tls
      - peer0org1mbemarketcom:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 7051:7051
    networks:
      test:
        aliases:
          - peer0.org1.mbemarket.com

  peer0org2mbemarketcom:
    deploy:
      placement:
        constraints:
          - node.labels.name == worker1
    container_name: peer0.org2.mbemarket.com
    image: hyperledger/fabric-peer:2.3
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org2.mbemarket.com
      - CORE_PEER_ADDRESS=peer0.org2.mbemarket.com:9051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:9051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.mbemarket.com:9052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:9052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.mbemarket.com:9051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org2.mbemarket.com:9051
      - CORE_PEER_LOCALMSPID=Org2MSP
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false
    volumes:
      - /var/run/:/host/var/run/
      - /home/ravi/mbeMarket/test-network/organizations/peerOrganizations/org2.mbemarket.com/peers/peer0.org2.mbemarket.com/msp:/etc/hyperledger/fabric/msp
      - /home/ravi/mbeMarket/test-network/organizations/peerOrganizations/org2.mbemarket.com/peers/peer0.org2.mbemarket.com/tls:/etc/hyperledger/fabric/tls
      - peer0org2mbemarketcom:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 9051:9051
    networks:
      test:
        aliases:
          - peer0.org2.mbemarket.com

  peer0org3mbemarketcom:
    deploy:
      placement:
        constraints:
          - node.labels.name == worker2
    container_name: peer0.org3.mbemarket.com
    image: hyperledger/fabric-peer:2.3
    environment:
      #Generic peer variables
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      # the following setting starts chaincode containers on the same
      # bridge network as the peers
      # https://docs.docker.com/compose/networking/
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=test
      - FABRIC_LOGGING_SPEC=INFO
      #- FABRIC_LOGGING_SPEC=DEBUG
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_PROFILE_ENABLED=true
      - CORE_PEER_ADDRESSAUTODETECT=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/tls/ca.crt
      # Peer specific variabes
      - CORE_PEER_ID=peer0.org3.mbemarket.com
      - CORE_PEER_ADDRESS=peer0.org3.mbemarket.com:11051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:11051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org3.mbemarket.com:11052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:11052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org3.mbemarket.com:11051
      - CORE_PEER_GOSSIP_BOOTSTRAP=peer0.org3.mbemarket.com:11051
      - CORE_PEER_LOCALMSPID=Org3MSP
      - CORE_PEER_GOSSIP_USELEADERELECTION=true
      - CORE_PEER_GOSSIP_ORGLEADER=false
      - CORE_PEER_TLS_CLIENTAUTHREQUIRED=false
    volumes:
      - /var/run/:/host/var/run/
      - /home/ravi/mbeMarket/test-network/organizations/peerOrganizations/org3.mbemarket.com/peers/peer0.org3.mbemarket.com/msp:/etc/hyperledger/fabric/msp
      - /home/ravi/mbeMarket/test-network/organizations/peerOrganizations/org3.mbemarket.com/peers/peer0.org3.mbemarket.com/tls:/etc/hyperledger/fabric/tls
      - peer0org3mbemarketcom:/var/hyperledger/production
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: peer node start
    ports:
      - 11051:11051
    networks:
      test:
        aliases:
          - peer0.org3.mbemarket.com
